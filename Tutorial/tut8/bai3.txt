from functools import reduce 
from collections import Counter

class StaticCheck(Visitor):

    def visitProgram(self,ctx:Program,o:object):
        env = reduce(lambda acc,ele: self.visit(ele,acc),ctx.decl,[])
        
        
    def visitVarDecl(self,ctx:VarDecl,o:object):
        if(ctx.name in o):
            raise RedeclaredVariable(ctx.name)
        return o + [ctx.name]

    def visitConstDecl(self,ctx:ConstDecl,o:object):
        if(ctx.name in o):
            raise RedeclaredConstant(ctx.name)
        return o + [ctx.name]
        
     #name:str,param:List[VarDecl],body:List[Decl]
    def visitFuncDecl(self,ctx:FuncDecl,o:object):
        if(ctx.name in o):
            raise RedeclaredFunction(ctx.name)
        env = reduce(lambda acc,ele: self.visit(ele,acc),ctx.param+ctx.body,[])
        return o + [ctx.name]

